---
- name: Extract distribution base name (works on linux mint as well)
  command: grep -oP 'UBUNTU_CODENAME=\K.*' /etc/os-release
  register: distro
  changed_when: False
- name: Update apt cache.
  apt:
    update_cache: yes
    cache_valid_time: 3600
- name: Install some required base packages
  apt:
    pkg:
      - dirmngr
      - unzip
- name: Ensure /etc/apt/keyrings/ exists
  file:
    path: /etc/apt/keyrings/
    state: directory
    mode: '0755'
- name: Add Keepass Apt signing key on remote server to keyring
  apt_key:
    id: 5738AE8480447DDF
    keyserver: keyserver.ubuntu.com
    keyring: /etc/apt/keyrings/ubuntuhandbook1-keepass2.gpg
- name: Add apt repo for Keepass 2
  apt_repository:
    repo: "{{ item }} [signed-by=/etc/apt/keyrings/ubuntuhandbook1-keepass2.gpg] http://ppa.launchpad.net/ubuntuhandbook1/keepass2/ubuntu {{ distro.stdout }} main"
    state: present
  with_items:
    - deb
    - deb-src
- name: Install keepass packages
  apt:
    pkg:
      - keepass2
      - xsel
      - xdotool
      # For (manual) gnome keyring integration
      - libsecret-tools
      # Following needed in order to set up plugin cache for keepass2-plugin-rpc
      - mono-complete
- name: Create keepass Plugins directory
  file:
    path: /usr/lib/keepass2/Plugins
    state: directory
    mode: 0755
- name: Check if KeePassRPC-{{ keepassrpc_version }} (Firefox integration requirement) already installed
  stat:
    path: /usr/lib/keepass2/Plugins/KeePassRPC.plgx-{{ keepassrpc_version }}
  register: keepassrpc_bin
- name: Download KeePassRPC {{ keepassrpc_version }}
  get_url:
    url: https://github.com/kee-org/keepassrpc/releases/download/v{{ keepassrpc_version }}/KeePassRPC.plgx
    checksum: "sha256:{{ keepassrpc_sha256 }}"
    dest: /usr/lib/keepass2/Plugins/KeePassRPC.plgx-{{ keepassrpc_version }}
    mode: 0644
  when: not keepassrpc_bin.stat.exists
- name: Symlink default KeePassRPC
  file:
    src: KeePassRPC.plgx-{{ keepassrpc_version }}
    dest: /usr/lib/keepass2/Plugins/KeePassRPC.plgx
    state: link
- name: Check if KeeTrayTOTP-{{ keetraytotp_version }} already installed
  stat:
    path: /usr/lib/keepass2/Plugins/KeeTrayTOTP.plgx-{{ keetraytotp_version }}
  register: keetraytotp_bin
- name: Download KeeTrayTOTP {{ keetraytotp_version }}
  get_url:
    url: https://github.com/KeeTrayTOTP/KeeTrayTOTP/releases/download/v{{ keetraytotp_version }}/KeeTrayTOTP.plgx
    checksum: "sha256:{{ keetraytotp_sha256 }}"
    dest: /usr/lib/keepass2/Plugins/KeeTrayTOTP.plgx-{{ keetraytotp_version }}
    mode: 0644
  when: not keetraytotp_bin.stat.exists
- name: Symlink default KeeTrayTOTP
  file:
    src: KeeTrayTOTP.plgx-{{ keetraytotp_version }}
    dest: /usr/lib/keepass2/Plugins/KeeTrayTOTP.plgx
    state: link
- name: Check if Yet-Another-Favicon-Downloader -{{ yetanotherfavicondl_version }} already installed
  stat:
    path: /usr/lib/keepass2/Plugins/YetAnotherFaviconDownloader.plgx-{{ yetanotherfavicondl_version }}
  register: yetanotherfavicondl
- name: Download Yet-Another-Favicon-Downloader  {{ yetanotherfavicondl_version }}
  get_url:
    url: https://github.com/navossoc/KeePass-Yet-Another-Favicon-Downloader/releases/download/v{{ yetanotherfavicondl_version }}/YetAnotherFaviconDownloader.plgx
    checksum: "sha256:{{ yetanotherfavicondl_sha256 }}"
    dest: /usr/lib/keepass2/Plugins/YetAnotherFaviconDownloader.plgx-{{ yetanotherfavicondl_version }}
    mode: 0644
  when: not yetanotherfavicondl.stat.exists
- name: Symlink default Yet-Another-Favicon-Downloader 
  file:
    src: YetAnotherFaviconDownloader.plgx-{{ yetanotherfavicondl_version }}
    dest: /usr/lib/keepass2/Plugins/YetAnotherFaviconDownloader.plgx
    state: link
- name: Check if KPScript already installed
  stat:
    path: /opt/kpscript-{{ kpscript_version }}/KPScript.exe
  register: kpscript_bin
- name: Create KPScript directory
  file:
    path: "/opt/kpscript-{{ kpscript_version }}"
    state: directory
    mode: 0755
- name: Download KPScript
  get_url:
    url: http://keepass.info/extensions/v2/kpscript/KPScript-{{ kpscript_version }}.zip
    checksum: "sha256:{{ kpscript_sha256 }}"
    dest: /tmp/
    mode: 0644
  when: not kpscript_bin.stat.exists
- name: Unarchive KPScript
  unarchive:
    src: /tmp/KPScript-{{ kpscript_version }}.zip
    dest: /tmp
    remote_src: yes
  when: not kpscript_bin.stat.exists
- name: Install KPScript binary
  command: install -D -m644 /tmp/KPScript.exe "/opt/kpscript-{{ kpscript_version }}/KPScript.exe"
  changed_when: false
  when: not kpscript_bin.stat.exists
- name: Symlink default KPScript
  file:
    src: "kpscript-{{ kpscript_version }}"
    dest: "/opt/kpscript"
    state: link
- name: Symlink default KPScript.exe
  file:
    src: "/opt/kpscript/KPScript.exe"
    dest: "/usr/lib/keepass2/KPScript.exe"
    state: link
    force: yes
- name: Install kpscript helper script
  copy:
    src: kpscript
    dest: /usr/local/bin/kpscript
    mode: "755"
